name: Publish Docker image

on:
  release:
    types:
      - prereleased

jobs:
  build:
    env:
      registry_url: cbxacr.azurecr.io
      repository_name: cbx/councilbox-client
      state_repo: councilbox/cbx-state
      service_name: councilbox-client
      stage: pre
      branch: master
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Calculate tag
        id: tag
        run: echo "::set-output name=tag::$(echo $stage'_'$(date +'%Y%m%d%H%M%S'))"

      - name: Image name
        id: image_name
        run: echo "::set-output name=image_name::$(echo $registry_url'/'$repository_name':'${{ github.event.release.tag_name }})"
      - name: print tag_name
        run: echo ${{ github.event.release.tag_name }}

      - uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZ_CREDENTIALS_AKS_PREDEV }}

      - name: Login acr
        run: |
              ACCESS_TOKEN=$(az acr login --name ${{ env.registry_url }} --expose-token --output tsv --query accessToken)
              docker login ${{ env.registry_url }} -u 00000000-0000-0000-0000-000000000000 -p $ACCESS_TOKEN

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/Dockerfile
          load: true
          tags: ${{ steps.image_name.outputs.image_name }}
          build-args: |
            REACT_APP_API_URL=api.pre.councilbox.com
            REACT_APP_CERT_API=secure-api.pre.councilbox.com

      - run: docker push ${{ steps.image_name.outputs.image_name }}
      - name: "Dispatch a deploy-test event"
        run: |
          curl -H "Accept: application/vnd.github.everest-preview+json" \
            -H "Authorization: token ${{ secrets.REPO_STATE_TOKEN }}" \
            --request POST \
            --data '{
              "event_type": "edit-image-helm-repo",
              "client_payload": {
                "environment": "${{ env.stage }}",
                "service": "${{ env.service_name }}",
                "actor": "${{ github.actor }}",
                "image": "${{ steps.image_name.outputs.image_name }}" }}'\
            https://api.github.com/repos/${{ env.state_repo }}/dispatches
